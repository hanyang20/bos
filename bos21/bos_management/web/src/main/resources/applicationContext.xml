<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:soap="http://cxf.apache.org/bindings/soap"
	   xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	   xsi:schemaLocation="
						http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/data/jpa
						http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
						  http://cxf.apache.org/bindings/soap
              http://cxf.apache.org/schemas/configuration/soap.xsd
              http://cxf.apache.org/jaxws
              http://cxf.apache.org/schemas/jaxws.xsd
                 http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
						">

	<!--指定连接池配置-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.233.131:1521:ORCL" />
		<property name="user" value="itheima20" />
		<property name="password" value="000" />
	</bean>
	<!-- spring整合JPA -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--
			#########################################################
			指定JPA扫描的实体类所在的包
			#########################################################
		-->
		<property name="packagesToScan" value="com.itheima.bos.domain" />
		<!-- 指定持久层提供者为Hibernate -->
		<property name="persistenceProvider">
			<bean class="org.hibernate.ejb.HibernatePersistence" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<!-- 自动建表 -->
				<property name="generateDdl" value="true" />
				<property name="database" value="ORACLE" />
				<property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect" />
				<property name="showSql" value="true" />
			</bean>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!--
		开启IOC注解.
		指定Spring进行扫描的包，如果该包中的类使用了@Component @Controller@Service等注解，会把这些类注册为bean
		！！！！不要扫描DAO ！！！！
		DAO包下的类要使用Spring Data JPA框架进行扫描
	-->
	<context:component-scan base-package="com.itheima.bos.service,com.itheima.bos.web" />

	<!-- 开启事务注解 -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />
	<!--
		指定Spring Data JPA要进行扫描的包,该包中的类框架会自动为其创建代理
	-->
	<jpa:repositories base-package="com.itheima.bos.dao" />
	<!-- 基于spring自动代理方式为Service类创建代理方式,实现权限控制 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<!-- 强制使用cglib方式创建代理对象 -->
		<property name="proxyTargetClass" value="true"></property>
	</bean>
	<!-- 配置切面 -->
	<bean
			class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"></property>
	</bean>
	<!--注册订单服务 -->
	<jaxrs:server address="/orderService">
		<jaxrs:serviceBeans>
			<ref bean="orderServiceImpl"></ref>
		</jaxrs:serviceBeans>

		<!-- 拦截请求信息,非必须 设置后,可以在控制台观察到请求信息 -->
		<jaxrs:inInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingInInterceptor"></bean>
		</jaxrs:inInterceptors>
		<!-- 拦截响应信息,非必须 设置后,可以在控制台观察到响应信息 -->
		<jaxrs:outInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingOutInterceptor"></bean>
		</jaxrs:outInterceptors>
	</jaxrs:server>
	<!--配置shiro框架工厂-->
	<bean id="shiroFiter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!--注入安全管理器-->
		<property name="securityManager" ref="securityManager"/>

		<property name="loginUrl" value="/login.html"/>
		<property name="successUrl" value="/index.html"/>
		<property name="unauthorizedUrl" value=""/>

		<property name="FilterChainDefinitions">
			<value>
				/css/** = anon
				/js/** = anon
				/images/** = anon
				/validatecode.jsp* = anon
				/login.jsp = anon
				/userAction_login.action = anon
				/demo01.jsp = anon
				/page_base_staff.action = perms["staff-list"]
				/areaAction_pageQuery.action = perms["areaAction_pageQuery"]
				/* = authc
			</value>
		</property>
	</bean>
	<!--注册安全管理器-->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--注入自定义的Realm-->
		<property name="realm" ref="bosRealm"></property>
		<!--注入缓存管理器-->
		<property name="cacheManager" ref="cacheManager"></property>
	</bean>
	<!--自定义的Realm-->
	<bean id="bosRealm" class="com.itheima.bos.service.realm.BOSRealm"></bean>

	<!--注册缓存管理器-->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!--指定读取配置文件-->
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
	</bean>
</beans>